From zxombie at berlios.de  Wed Feb  1 23:46:14 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Wed, 1 Feb 2006 23:46:14 +0100
Subject: [Libpkg-svn] r57 - trunk/src
Message-ID: <200602012246.k11MkEOF009027@sheep.berlios.de>

Author: zxombie
Date: 2006-02-01 23:46:13 +0100 (Wed, 01 Feb 2006)
New Revision: 57

Modified:
   trunk/src/pkg.3
   trunk/src/pkg_db.3
   trunk/src/pkg_db.c
   trunk/src/pkg_db.h
   trunk/src/pkg_repo.3
Log:
Update the manual pages.
Reorder functions to match the order in the manual pages.


Modified: trunk/src/pkg.3
===================================================================
--- trunk/src/pkg.3	2006-01-31 09:41:04 UTC (rev 56)
+++ trunk/src/pkg.3	2006-02-01 22:46:13 UTC (rev 57)
@@ -30,16 +30,26 @@
 .Os
 .Sh NAME
 .Nm pkg_new_empty ,
-.Nm pkg_new_freebsd_from_fd ,
+.Nm pkg_new_freebsd_from_file ,
 .Nm pkg_new_freebsd_installed ,
-.Nm pkg_make_freebsd ,
+.Nm pkg_new_freebsd_empty ,
+.Nm pkg_compare ,
+.Nm pkg_get_control_files ,
+.Nm pkg_get_control_file ,
+.Nm pkg_get_dependencies ,
 .Nm pkg_get_name ,
-.Nm pkg_get_dependencies ,
-.Nm pkg_get_control_files ,
 .Nm pkg_get_next_file ,
+.Nm pkg_get_origin ,
+.Nm pkg_get_version ,
+.Nm pkg_add_dependency ,
+.Nm pkg_add_file ,
+.Nm pkg_list_free ,
 .Nm pkg_free ,
 .Nm pkg_file_new ,
 .Nm pkg_file_new_from_buffer ,
+.Nm pkg_file_write ,
+.Nm pkg_file_get ,
+.Nm pkg_file_get_name ,
 .Nm pkg_file_free ,
 .Nd functions for managing binary packages and their files
 .Sh LIBRARY
@@ -47,22 +57,36 @@
 .Sh SYNOPSIS
 .In pkg.h
 .Ft struct pkg *
-.Fn pkg_new_empty "const char *name"
+.Fn pkg_new_empty "const char *pkg_name"
 .Ft struct pkg *
-.Fn pkg_new_freebsd_from_fd "FILE *fd"
+.Fn pkg_new_freebsd_from_file "FILE *fd"
 .Ft struct pkg *
 .Fn pkg_new_freebsd_installed "const char *pkg_name" "const char *pkg_db_dir"
 .Ft struct pkg *
-.Fn pkg_make_freebsd "struct pkg *pkg" "FILE *fd"
-.Ft char *
-.Fn pkg_get_name "struct pkg *pkg"
+.Fn pkg_new_freebsd_empty "const char *pkg_name"
+.Ft int
+.Fn pkg_compare "const void *pkg_a" "const void *"
 .Ft struct pkg_file **
-.Fn pkg_get_dependencies "struct pkg *pkg"
-.Ft struct pkg_file **
 .Fn pkg_get_control_files "struct pkg *pkg"
 .Ft struct pkg_file *
+.Fn pkg_get_control_file "struct pkg *pkg" "const char *pkg_name"
+.Ft struct pkg_file **
+.Fn pkg_get_dependencies "struct pkg *pkg"
+.Ft char *
+.Fn pkg_get_name "struct pkg *pkg"
+.Ft struct pkg_file *
 .Fn pkg_get_next_file "struct pkg *pkg"
+.Ft char *
+.Fn pkg_get_origin "struct pkg *pkg"
+.Ft char *
+.Fn pkg_get_version "struct pkg *pkg"
 .Ft int
+.Fn pkg_add_dependency "struct pkg *pkg" "struct pkg *depend"
+.Ft int
+.Fn pkg_add_file "struct pkg *pkg" "struct pkg_file *file"
+.Ft int
+.Fn pkg_list_free "struct pkg **pkgs"
+.Ft int
 .Fn pkg_free "struct pkg *pkg"
 .Ft struct pkg_file *
 .Fn pkg_file_new "const char *filename"
@@ -70,6 +94,10 @@
 .Fn pkg_file_new_from_buffer "const char *filename" "uint64_t length" "char *buffer" "const struct stat *sb"
 .Ft int
 .Fn pkg_file_write "strict pkg_file *file"
+.Ft char *
+.Fn pkg_file_get "struct pkg_file *file"
+.Ft char *
+.Fn pkg_file_get_name "struct pkg_file *file"
 .Ft int
 .Fn pkg_file_free "struct pkg_file *file"
 .Sh DESCRIPTION
@@ -81,7 +109,7 @@
 .Bl -tag -compact -width indent
 .It Fn pkg_new_empty
 Creates a new package with only the package name.
-.It Fn pkg_new_freebsd_from_fd
+.It Fn pkg_new_freebsd_from_file
 Creates a new package with callbacks to handle FreeBSD
 packages version 1.1
 .It Fn pkg_new_freebsd_installed
@@ -90,25 +118,36 @@
 from a given directory
 .Vt pkg_db_dir
 containing the package control files.
-.It Fn pkg_make_freebsd
-Converts an empty package to a FreeBSD package.
-The
-.Vt fd
-must point to a file that is a correct FreeBSD package.
-.It Fn pkg_get_name
-Returns the name of a package
-.Vt pkg .
+.It Fn pkg_new_freebsd_empty
+Creates an empty FreeBSD package.
+.It Fn pkg_compare
+Helper function to be passed to qsort to sort packages by name.
+.It Fn pkg_get_control_files
+Returns all control files from the package.
+Eg. The `+' files in /var/db/pkg/package/ from FreeBSD Packages.
+.It Fn pkg_get_control_file
+Returns a given control file from the package.
 .It Fn pkg_get_dependencies
 Returns an array of pointers to
 .Vt pkg
 objects of packages that the current package depends on.
 The package objects are almost empty with just the name set so need to be retrieced from a repository with
 .Xr pkg_repo_find_pkg 3 .
-.It Fn pkg_get_control_files
-Returns all control files from the package.
-Eg. The `+' files in /var/db/pkg/package/ from FreeBSD Packages.
+.It Fn pkg_get_name
+Returns the name of a package
+.Vt pkg .
 .It Fn pkg_get_next_file
 Gets the next non-control file from the package.
+.It Fn pkg_get_origin
+Gets the packages origin or NULL if it has none.
+.It Fn pkg_get_version
+Return a string containg the package format version.
+.It Fn pkg_add_dependency
+Adds a dependency to the package.
+.It Fn pkg_add_file
+Add a file to a package.
+.It Fn pkg_list_free
+Frees a NULL terminated array of packages.
 .It Fn pkg_free
 Frees all allocated space from a package and calls the
 package free callback.
@@ -135,6 +174,12 @@
 writes the file pointed to by
 .Vt file
 to the correct place relative to the current directory.
+.It Fn pkg_file_get
+Gets the contents of the file
+.Vt file .
+.It Fn pkg_file_get_name
+Gets the name of the file stored in
+.Vt file .
 .It Fn pkg_file_free
 Frees a
 .Tn struct pkg_file .

Modified: trunk/src/pkg_db.3
===================================================================
--- trunk/src/pkg_db.3	2006-01-31 09:41:04 UTC (rev 56)
+++ trunk/src/pkg_db.3	2006-02-01 22:46:13 UTC (rev 57)
@@ -32,8 +32,11 @@
 .Nm pkg_db_open_freebsd ,
 .Nm pkg_db_install_pkg ,
 .Nm pkg_db_is_installed ,
-.Nm pkg_db_get_packages ,
+.Nm pkg_db_get_installed ,
+.Nm pkg_db_get_installed_match ,
+.Nm pkg_db_get_package ,
 .Nm pkg_db_free ,
+.Nm pkg_match_all ,
 .Nd functions for installing packages
 .Sh LIBRARY
 .Lb libpkg
@@ -43,13 +46,18 @@
 .Fn pkg_db_open_freebsd "const char *base"
 .Ft int
 .Fn pkg_db_install_pkg "struct pkg_db *db" "struct pkg *pkg"
+.Ft int
+.Fn pkg_db_is_installed "struct pkg_db *db" "const char *package"
 .Ft struct pkg **
-.Fn pkg_db_get_packages "struct pkg_db *db"
-.Ft in
-.Fn pkg_db_is_installed "struct pkg_db *db" "const char *package"
+.Fn pkg_db_get_installed "struct pkg_db *db"
+.Ft struct pkg **
+.Fn pkg_db_get_installed_match "struct pkg_db *db" "pkg_db_match *match" "void *data"
+.Ft struct pkg *
+.Fn pkg_db_get_package "struct pkg_db *db" "const char *pkg_name"
 .Ft int
 .Fn pkg_db_free "struct pkg_db *db"
-.Ft struct pkg_list *
+.Ft int
+.Fn pkg_match_all "struct pkg *pkg" "void *data"
 .Sh DESCRIPTION
 The Package Database is a location where packages can be
 installed to and retrieved from.
@@ -63,14 +71,29 @@
 .It Fn pkg_db_install_pkg
 Runs the package install callback to install a package.
 .It Fn pkg_db_is_installed
-Checks if the named package is installed. Returns 0 if it is installed, -1 otherwise.
-.It Fn pkg_db_get_packages
-Returns a NULL terminated array of packages installed in
-the database
-.Vt db . 
+Checks if the named package is installed. Returns 0 if it
+is installed, -1 otherwise.
+.It Fn pkg_db_get_installed
+Returns a NULL terminated array of all packages installed
+in the database
+.Vt db .
+.It Fn pkg_db_get_installed_match
+Returns a NULL terminated array of all packages that when
+passed to the function
+.Vt match
+returns 0.
+.It Fn pkg_db_get_package
+Returns a package with the name
+.Vt pkg_name
+from the database
+.Vt db .
 .It Fn pkg_db_free
 Frees the
 .Tn struct pkg_db .
+.It Fn pkg_match_all
+A helper function to be passed to
+.Fn pkg_db_get_installed_match
+to match all packages installed on the system.
 .El
 .Sh SEE ALSO
 .Xr libpkg 3 ,

Modified: trunk/src/pkg_db.c
===================================================================
--- trunk/src/pkg_db.c	2006-01-31 09:41:04 UTC (rev 56)
+++ trunk/src/pkg_db.c	2006-02-01 22:46:13 UTC (rev 57)
@@ -156,26 +156,16 @@
 }
 
 /*
- * Matches all packages.
- * This is here because it is used with pkg_db_get_installed_match
- */
-int
-pkg_match_all(struct pkg *pkg __unused, void *data __unused)
-{
-	return 0;
-}
-
-/*
  * Gets the package with the given name
  */
 struct pkg *
-pkg_db_get_package(struct pkg_db *db, const char *name)
+pkg_db_get_package(struct pkg_db *db, const char *pkg_name)
 {
-	if (!db || !name)
+	if (!db || !pkg_name)
 		return NULL;
 
 	if (db->pkg_get_package)
-		return db->pkg_get_package(db, name);
+		return db->pkg_get_package(db, pkg_name);
 
 	return NULL;
 }
@@ -197,3 +187,13 @@
 
 	return 0;
 }
+
+/*
+ * Matches all packages.
+ * This is here because it is used with pkg_db_get_installed_match
+ */
+int
+pkg_match_all(struct pkg *pkg __unused, void *data __unused)
+{
+	return 0;
+}

Modified: trunk/src/pkg_db.h
===================================================================
--- trunk/src/pkg_db.h	2006-01-31 09:41:04 UTC (rev 56)
+++ trunk/src/pkg_db.h	2006-02-01 22:46:13 UTC (rev 57)
@@ -48,8 +48,9 @@
 struct pkg	**pkg_db_get_installed(struct pkg_db *);
 struct pkg	**pkg_db_get_installed_match(struct pkg_db *, pkg_db_match *,
 			void *);
-int		  pkg_match_all(struct pkg *, void *data);
 struct pkg	 *pkg_db_get_package(struct pkg_db *, const char *);
 int		  pkg_db_free(struct pkg_db *);
 
+int		  pkg_match_all(struct pkg *, void *);
+
 #endif /* __LIBPKG_PKG_DB_H__ */

Modified: trunk/src/pkg_repo.3
===================================================================
--- trunk/src/pkg_repo.3	2006-01-31 09:41:04 UTC (rev 56)
+++ trunk/src/pkg_repo.3	2006-02-01 22:46:13 UTC (rev 57)
@@ -32,7 +32,6 @@
 .Nm pkg_repo_new_files ,
 .Nm pkg_repo_new_ftp ,
 .Nm pkg_repo_get_pkg ,
-.Nm pkg_repo_find_pkg ,
 .Nm pkg_repo_free ,
 .Nd functions for communicating with a package repository
 .Sh LIBRARY
@@ -45,8 +44,6 @@
 .Fn pkg_repo_new_ftp "const char *site" "const char *path"
 .Ft struct pkg *
 .Fn pkg_repo_get_pkg "struct pkg_repo *repo" "const char *pkg_name"
-.Ft struct pkg *
-.Fn pkg_repo_find_pkg "struct pkg_repo *repo" "struct pkg *pkg"
 .Ft int
 .Fn pkg_repo_free "struct pkg_repo *repo"
 .Sh DESCRIPTION
@@ -80,12 +77,6 @@
 with the name
 .Vt pkg_name
 from the repo.
-.It Fn pkg_repo_find_pkg
-Finds an empty package
-.Vt pkg
-in a respority
-.Vt repo
-and sets the appropriate data to make it installable.
 .It Fn pkg_repo_free
 Frees all allocated memory from the given
 .Tn pkg_repo .



From zxombie at berlios.de  Thu Feb  2 00:04:32 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Thu, 2 Feb 2006 00:04:32 +0100
Subject: [Libpkg-svn] r58 - trunk
Message-ID: <200602012304.k11N4W8l011827@sheep.berlios.de>

Author: zxombie
Date: 2006-02-02 00:04:31 +0100 (Thu, 02 Feb 2006)
New Revision: 58

Modified:
   trunk/CHANGELOG
Log:
Update the CHANGELOG


Modified: trunk/CHANGELOG
===================================================================
--- trunk/CHANGELOG	2006-02-01 22:46:13 UTC (rev 57)
+++ trunk/CHANGELOG	2006-02-01 23:04:31 UTC (rev 58)
@@ -1,3 +1,96 @@
+2006-02-02
+ * Update the manual pages.
+ * Reorder functions to match the order in the manual pages
+
+2006-01-31
+ * Hook tools/pkg_info up to the build
+ * Remove the demo now pkg_info is in the tree
+
+2006-01-19
+ * Add a pkg_info replacement
+
+2006-01-17
+ * Fix return values for pkg_db_install_pkg in man page
+
+2006-01-16
+ * Add pkg_get_version to return a string containing the human readable package format version.
+
+2006-01-11
+ * General changes to build pkg_info with libpkg:
+ * Make pkg_freebsd_contents_line public to get the lines from the +CONTENTS file
+ * Add pkg_freebsd_get_contents to retrieve pkg_freebsd_contents. The contents are
+ * private but it is needed to then retrieve more information from.
+ * Add pkg_freebsd_contents_get_line to get the given line from the +CONTENTS file
+
+2006-01-09
+ * Add a comment on what all functions in src/pkg.c are ment to do
+ * Add comments describing all functions that were undocumented
+ * Remove pkg_repo_find_pkg as it is unneeded
+ * Add a comment on wat the check for file->contents being NULL is for in pkg_file_get
+ * Add pkg_file_get_name to retrieve the name of a file
+
+2005-12-21
+ * Add pkg_db_get_package to get a named package from a Database
+ * Check the return value of opendir to stop a seg fault
+ * Improve the style
+ * Update the demo and add a license
+ * Change pkg_repo_find_pkg to tage a package name
+ * Move some less used pkg callback assignments from pkg_new to pkg_add_callbacks
+ * Remove pkg_freebsd_convert as it is unused anymore
+ * More style fixes
+ * Add pkg_get_origin
+ * Move pkg_freebsd_get_origin to a pkg_get_origin callback
+ * Split pkg_add_callbacks to seperate functions
+
+2005-12-16
+ * Speed up pkg_file_new a little by using the size from struct stat
+ * Add a function to pass to qsort to sort a list of packages by pkg_name
+ * Make pkg_file read the file only when it needs to
+ * Fix pkg_file_get when there is a buffer but not a fd
+ * Add pkg_get_control_file to retrieve a single named control file
+ * Build a profiling library
+
+2005-12-15
+ * Add a function to retrieve the port's origin from a package file
+ * Rename pkg_make_freebsd to pkg_freebsd_convert
+ * Move pkg_freebsd_* to pkg_freebsd.h
+ * Add a FreeBSD callback for pkg_add_dependency
+ * Make the FreeBSD +CONTENTS line count unsigned int
+ * Make counters using this unsigned int also
+ * Set the origin for installed packages
+ * Fix the pointer from origin to f_pkg->origin
+ * Free the FreeBSD package origin
+ * Create a free function for a null terminated array of packages
+
+2005-12-14
+ * Add pkg_add_dependency to add a dependency to a given package package
+
+2005-12-13
+ * Add pkg_new_freebsd_empty to create an empty package to add files to
+ * Implement the pkg_add_file callback for empty FreeBSD packages
+ * Add pkg_freebsd_contents_add_line to add a line to a +CONTENTS file
+ * Add pkg_freebsd_contents_add_file to add file data to a +CONTENTS file
+ * Modify pkg_freebsd_contents_new to allow the creation of empty files
+ * Improve the use of white space
+
+2005-11-28
+ * Fix Segmentation Faults when giving bad data
+ * Simplify pkg_db_open_freebsd
+ * Check the directory given to pkg_db_open exists and is a directory
+ * Add a pkg_add_file callback to add a file to a package
+ * Change a use of pkg_new to pkg_new_empty
+
+2005-11-24
+ * Rename pkg_new_freebsd to pkg_new_freebsd_from_fd
+ * Add pkg_new_freebsd_installed to get an installed package
+ * Add pkg_file_new to get a pkg_file from an installed file
+ * Add more asserts to check callbacks and internal functions are called correctly and the data structures are correct
+ * Change the FreeBSD pkg_db_get_installed callback to create FreeBSD packages
+
+2005-11-18
+ * Add pkg_db_get_installed. It returns an array of all the installed packages
+ * Update pkg(3) and pkg_db(3)
+
 2005-11-15
  * Split up and update the manual pages
 



From zxombie at berlios.de  Thu Feb  2 00:08:10 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Thu, 2 Feb 2006 00:08:10 +0100
Subject: [Libpkg-svn] r59 - tags
Message-ID: <200602012308.k11N8Akx012421@sheep.berlios.de>

Author: zxombie
Date: 2006-02-02 00:08:10 +0100 (Thu, 02 Feb 2006)
New Revision: 59

Added:
   tags/libpkg-0.1.20060202/
Log:
Tag the 0.1.20060202 release

Copied: tags/libpkg-0.1.20060202 (from rev 58, trunk)



From zxombie at berlios.de  Fri Feb  3 01:37:24 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Fri, 3 Feb 2006 01:37:24 +0100
Subject: [Libpkg-svn] r60 - trunk/tools/pkg_info
Message-ID: <200602030037.k130bOEN000070@sheep.berlios.de>

Author: zxombie
Date: 2006-02-03 01:37:20 +0100 (Fri, 03 Feb 2006)
New Revision: 60

Modified:
   trunk/tools/pkg_info/match.c
Log:
Fix _pkg_match_regex when there are multiple regex strings


Modified: trunk/tools/pkg_info/match.c
===================================================================
--- trunk/tools/pkg_info/match.c	2006-02-01 23:08:10 UTC (rev 59)
+++ trunk/tools/pkg_info/match.c	2006-02-03 00:37:20 UTC (rev 60)
@@ -44,7 +44,7 @@
 
 	rex = data;
 	for(i=0; i < rex->count; i++) {
-		if (regexec(rex->rex, pkg_get_name(pkg), 0, NULL, 0) == 0)
+		if (regexec(&rex->rex[i], pkg_get_name(pkg), 0, NULL, 0) == 0)
 			return 0;
 	}
 	return -1;



From zxombie at berlios.de  Fri Feb  3 01:41:54 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Fri, 3 Feb 2006 01:41:54 +0100
Subject: [Libpkg-svn] r61 - trunk/tools/pkg_info
Message-ID: <200602030041.k130fs01000699@sheep.berlios.de>

Author: zxombie
Date: 2006-02-03 01:41:09 +0100 (Fri, 03 Feb 2006)
New Revision: 61

Modified:
   trunk/tools/pkg_info/main.c
Log:
Reduce the amount of code by merging the MATCH_ALL, MATCH_REGEX and MATCH_EREGEX cases


Modified: trunk/tools/pkg_info/main.c
===================================================================
--- trunk/tools/pkg_info/main.c	2006-02-03 00:37:20 UTC (rev 60)
+++ trunk/tools/pkg_info/main.c	2006-02-03 00:41:09 UTC (rev 61)
@@ -204,8 +204,16 @@
 
 	switch(info.match_type) {
 	case MATCH_ALL:
+	case MATCH_REGEX:
+	case MATCH_EREGEX:
 		/* Display all packages installed */
-		pkgs = pkg_db_get_installed(info.db);
+		if (info.match_type == MATCH_ALL)
+			pkgs = pkg_db_get_installed(info.db);
+		else
+			pkgs = match_regex(info.db, info.pkgs,
+			    (info.match_type == MATCH_EREGEX));
+
+		/* Sort the packages and display them */
 		if (pkgs == NULL) {
 			/* XXX Error message */
 			return 1;
@@ -218,34 +226,6 @@
 		}
 		retval = 0;
 		break;
-	case MATCH_REGEX:
-	case MATCH_EREGEX:
-		/* Match all packages that match one of the [e]regex given */
-		{
-		char *prev;
-
-		//pkgs = pkg_db_get_installed(info.db);
-		//if (pkgs == NULL) {
-			/* XXX Error message */
-		//	break;
-		//}
-
-		pkgs = match_regex(info.db, info.pkgs,
-		    (info.match_type == MATCH_EREGEX));
-
-		/* Display all packages that matches atleast one regex */
-		prev = NULL;
-		for (cur = 0; pkgs[cur] != NULL; cur++) {
-			/* Only show one instance of each package */
-			if (prev == NULL ||
-			    strcmp(prev, pkg_get_name(pkgs[cur])) != 0) {
-				show(info.db, pkgs[cur], info.flags, info.quiet);
-			}
-			prev = pkg_get_name(pkgs[cur]);
-		}
-		}
-		retval = 0;
-		break;
 	case MATCH_GLOB:
 	case MATCH_NGLOB:
 		errx(1, "Unsupported match type (use -x or -X)");



From zxombie at berlios.de  Fri Feb  3 03:18:06 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Fri, 3 Feb 2006 03:18:06 +0100
Subject: [Libpkg-svn] r62 - trunk/tools/pkg_info
Message-ID: <200602030218.k132I6Oh024992@sheep.berlios.de>

Author: zxombie
Date: 2006-02-03 03:17:50 +0100 (Fri, 03 Feb 2006)
New Revision: 62

Modified:
   trunk/tools/pkg_info/Makefile
Log:
Add WITH_PROFILIG make option to buuild a profiling binary
Change the indentation in the Makefile


Modified: trunk/tools/pkg_info/Makefile
===================================================================
--- trunk/tools/pkg_info/Makefile	2006-02-03 00:41:09 UTC (rev 61)
+++ trunk/tools/pkg_info/Makefile	2006-02-03 02:17:50 UTC (rev 62)
@@ -1,11 +1,17 @@
-PROG=	pkg_info
+PROG	 = pkg_info
 
-SRCS=	main.c match.c show.c
+SRCS	 = main.c match.c show.c
 
-CFLAGS+=-I${.CURDIR}/../../src
-LDADD=	${.CURDIR}/../../src/libpkg.a -lmd -larchive -lbz2 -lz
-NOMAN=	1
+CFLAGS	+= -I${.CURDIR}/../../src
+.if defined(WITH_PROFILE)
+CFLAGS	+= -pg
+LDADD	 = ${.CURDIR}/../../src/libpkg_p.a
+.else
+LDADD	 = ${.CURDIR}/../../src/libpkg.a
+.endif
+LDADD	+= -lmd -larchive -lbz2 -lz
+NOMAN	 = 1
 
-WARNS?=	6
+WARNS	?= 6
 
 .include <bsd.prog.mk>



From zxombie at berlios.de  Fri Feb  3 21:50:16 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Fri, 3 Feb 2006 21:50:16 +0100
Subject: [Libpkg-svn] r63 - trunk/src
Message-ID: <200602032050.k13KoGK0021846@sheep.berlios.de>

Author: zxombie
Date: 2006-02-03 21:50:00 +0100 (Fri, 03 Feb 2006)
New Revision: 63

Modified:
   trunk/src/pkg_freebsd.c
Log:
Add freebsd_open_control_files to open all the packages control files from the filesystem.
Add more asserts to check the assumptions about the freebsd_package struct are correct
Move the FREE_CONTENTS macro to before the code
Improve indentation in the struct freebsd_package definition


Modified: trunk/src/pkg_freebsd.c
===================================================================
--- trunk/src/pkg_freebsd.c	2006-02-03 02:17:50 UTC (rev 62)
+++ trunk/src/pkg_freebsd.c	2006-02-03 20:50:00 UTC (rev 63)
@@ -43,8 +43,8 @@
 #include "pkg_freebsd_private.h"
 
 struct freebsd_package {
-	struct archive	*archive;
-	FILE		*fd;
+	struct archive	 *archive;
+	FILE		 *fd;
 
 	struct pkg_file **control;
 	struct pkg_freebsd_contents *contents;
@@ -52,7 +52,7 @@
 
 	/* If not null contains the next file in
 	 * the archive after the control files */
-	struct pkg_file	*next;
+	struct pkg_file	 *next;
 
 	struct pkg_file **all_files;
 	unsigned int	  all_files_size;
@@ -75,12 +75,22 @@
 static char			 *freebsd_get_origin(struct pkg *);
 
 /* Internal functions */
+struct pkg_file			**freebsd_open_control_files(const char *);
 static struct freebsd_package	*freebsd_get_package(FILE *,
 					struct pkg_file **);
 static struct pkg_file		*freebsd_get_next_entry(struct archive *);
 static char 			*freebsd_get_pkg_name(const char *);
 static int			 freebsd_free_package(struct freebsd_package *);
 
+#define FREE_CONTENTS(c) \
+	{ \
+		int i; \
+		for (i=0; c[i] != NULL; i++) { \
+			pkg_file_free(c[i]); \
+		} \
+		free(c); \
+	}
+
 /*
  * Creates a new FreeBSD package from a FILE pointer
  */
@@ -119,71 +129,21 @@
 struct pkg *
 pkg_new_freebsd_installed(const char *pkg_name, const char *pkg_db_dir)
 {
-	DIR *d;
-	struct dirent *de;
 	struct pkg *pkg;
 	struct freebsd_package *f_pkg;
 	struct pkg_file **control;
-	unsigned int control_size, control_count, line;
+	unsigned int line;
 
-#define FREE_CONTENTS(c) \
-	{ \
-		int i; \
-		for (i=0; c[i] != NULL; i++) { \
-			pkg_file_free(c[i]); \
-		} \
-		free(c); \
-	}
 
 	if (!pkg_name || ! pkg_db_dir)
 		return NULL;
 
-	control = NULL;
-
 	/*
 	 * This section until the closedir takes too long in pkg_info.
 	 * It needs to be optimised to just read the required data
 	 */
-	d = opendir(pkg_db_dir);
-	if (d == NULL)
-		return NULL;
+	control = freebsd_open_control_files(pkg_db_dir);
 
-	/* Load all the + files into control */
-	control_size = sizeof(struct pkg_file **);
-	control = malloc(control_size);
-	control[0] = NULL;
-	control_count = 0;
-	while ((de = readdir(d)) != NULL) {
-		char *file;
-	
-		if (de->d_name[0] == '.') {
-			continue;
-		} else if (de->d_type != DT_REG) {
-			closedir(d);
-			FREE_CONTENTS(control);
-			return NULL;
-		} else if (de->d_name[0] != '+') {
-			/* All files must begin with + */
-			closedir(d);
-			FREE_CONTENTS(control);
-			return NULL;
-		}
-		asprintf(&file, "%s/%s", pkg_db_dir, de->d_name);
-		if (!file) {
-			closedir(d);
-			FREE_CONTENTS(control);
-			return NULL;
-		}
-		control_size += sizeof(struct pkg_file **);
-		control = realloc(control, control_size);
-		control[control_count] = pkg_file_new(file);
-		control_count++;
-		control[control_count] = NULL;
-		free(file);
-	}
-
-	closedir(d);
-
 	/* Only the get_deps and free callbacks will work */
 	pkg = pkg_new(pkg_name, freebsd_get_control_files,
 	    freebsd_get_control_file, freebsd_get_deps, freebsd_free);
@@ -198,7 +158,9 @@
 		pkg_free(pkg);
 		return NULL;
 	}
+	pkg->data = f_pkg;
 
+	assert(f_pkg->contents != NULL);
 	for (line = 0; line < f_pkg->contents->line_count; line++) {
 		if (f_pkg->contents->lines[line].line_type == PKG_LINE_COMMENT)
 		    {
@@ -210,8 +172,6 @@
 			}
 		}
 	}
-	
-	pkg->data = f_pkg;
 
 	return pkg;
 }
@@ -249,6 +209,7 @@
 	f_pkg->all_files[0] = NULL;
 
 	/* Setup the +CONTENTS file */
+	assert(f_pkg->contents != NULL);
 	pkg_freebsd_contents_add_line(f_pkg->contents, PKG_LINE_COMMENT,
 	    "PKG_FORMAT_REVISION:1.1");
 	pkg_freebsd_contents_add_line(f_pkg->contents, PKG_LINE_NAME, pkg_name);
@@ -259,12 +220,69 @@
 struct pkg_freebsd_contents *
 pkg_freebsd_get_contents(struct pkg *pkg)
 {
+	struct freebsd_package *f_pkg;
 	if (pkg == NULL)
 		return NULL;
 
-	return ((struct freebsd_package *)pkg->data)->contents;
+	f_pkg = (struct freebsd_package *)pkg->data;
+	assert(f_pkg != NULL);
+
+	/* Load the +CONTENTS file if it is NULL */
+	assert(f_pkg->contents != NULL);
+	return f_pkg->contents;
 }
 
+struct pkg_file **
+freebsd_open_control_files(const char *pkg_db_dir)
+{
+	struct pkg_file **control;
+	unsigned int control_size, control_count;
+	DIR *d;
+	struct dirent *de;
+	
+
+	d = opendir(pkg_db_dir);
+	if (d == NULL)
+		return NULL;
+
+	/* Load all the + files into control */
+	control_size = sizeof(struct pkg_file **);
+	control = malloc(control_size);
+	control[0] = NULL;
+	control_count = 0;
+	while ((de = readdir(d)) != NULL) {
+		char *file;
+	
+		if (de->d_name[0] == '.') {
+			continue;
+		} else if (de->d_type != DT_REG) {
+			closedir(d);
+			FREE_CONTENTS(control);
+			return NULL;
+		} else if (de->d_name[0] != '+') {
+			/* All files must begin with + */
+			closedir(d);
+			FREE_CONTENTS(control);
+			return NULL;
+		}
+		asprintf(&file, "%s/%s", pkg_db_dir, de->d_name);
+		if (!file) {
+			closedir(d);
+			FREE_CONTENTS(control);
+			return NULL;
+		}
+		control_size += sizeof(struct pkg_file **);
+		control = realloc(control, control_size);
+		control[control_count] = pkg_file_new(file);
+		control_count++;
+		control[control_count] = NULL;
+		free(file);
+	}
+	closedir(d);
+
+	return control;
+}
+
 /*
  * Returns a string containing the package version
  */



From zxombie at berlios.de  Fri Feb  3 21:54:39 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Fri, 3 Feb 2006 21:54:39 +0100
Subject: [Libpkg-svn] r64 - in trunk: src tools/pkg_info
Message-ID: <200602032054.k13Ksdj2027243@sheep.berlios.de>

Author: zxombie
Date: 2006-02-03 21:54:26 +0100 (Fri, 03 Feb 2006)
New Revision: 64

Modified:
   trunk/src/pkg.c
   trunk/src/pkg_freebsd.c
   trunk/src/pkg_freebsd_contents.c
   trunk/src/pkg_private.h
   trunk/tools/pkg_info/show.c
Log:
Make pkg_get_name, pkg_get_version and pkg_get_version return "const char *" rather than "char *"


Modified: trunk/src/pkg.c
===================================================================
--- trunk/src/pkg.c	2006-02-03 20:50:00 UTC (rev 63)
+++ trunk/src/pkg.c	2006-02-03 20:54:26 UTC (rev 64)
@@ -197,7 +197,7 @@
 /*
  * Gets the name of a package
  */
-char *
+const char *
 pkg_get_name(struct pkg *pkg)
 {
 	if (!pkg)
@@ -226,7 +226,7 @@
 /*
  * Gets a packages origin if it has one
  */
-char *
+const char *
 pkg_get_origin(struct pkg *pkg)
 {
 	if (pkg == NULL)
@@ -241,7 +241,7 @@
 /*
  * Return a string containg the package format version
  */
-char *
+const char *
 pkg_get_version(struct pkg *pkg)
 {
 	if (pkg == NULL)

Modified: trunk/src/pkg_freebsd.c
===================================================================
--- trunk/src/pkg_freebsd.c	2006-02-03 20:50:00 UTC (rev 63)
+++ trunk/src/pkg_freebsd.c	2006-02-03 20:54:26 UTC (rev 64)
@@ -71,8 +71,8 @@
 static struct pkg		**freebsd_get_deps(struct pkg *);
 static int			  freebsd_free(struct pkg *);
 
-static char			 *freebsd_get_version(struct pkg *);
-static char			 *freebsd_get_origin(struct pkg *);
+static const char		 *freebsd_get_version(struct pkg *);
+static const char		 *freebsd_get_origin(struct pkg *);
 
 /* Internal functions */
 struct pkg_file			**freebsd_open_control_files(const char *);
@@ -286,7 +286,7 @@
 /*
  * Returns a string containing the package version
  */
-static char *
+static const char *
 freebsd_get_version(struct pkg *pkg)
 {
 	struct freebsd_package *f_pkg;
@@ -318,7 +318,7 @@
 /*
  * Returns the origin of a given package
  */
-static char *
+static const char *
 freebsd_get_origin(struct pkg *pkg)
 {
 	struct freebsd_package *f_pkg;

Modified: trunk/src/pkg_freebsd_contents.c
===================================================================
--- trunk/src/pkg_freebsd_contents.c	2006-02-03 20:50:00 UTC (rev 63)
+++ trunk/src/pkg_freebsd_contents.c	2006-02-03 20:54:26 UTC (rev 64)
@@ -227,7 +227,7 @@
 pkg_freebsd_contents_add_dependency(struct pkg_freebsd_contents *contents,
 		struct pkg *pkg)
 {
-	char *origin;
+	const char *origin;
 
 	if (contents == NULL || contents->file != NULL || pkg == NULL)
 		return -1;

Modified: trunk/src/pkg_private.h
===================================================================
--- trunk/src/pkg_private.h	2006-02-03 20:50:00 UTC (rev 63)
+++ trunk/src/pkg_private.h	2006-02-03 20:54:26 UTC (rev 64)
@@ -60,8 +60,8 @@
 				pkg_free_callback *);
 
 /* Callbacks to get data from a package, eg. the description */
-typedef char		 *pkg_get_version_callback(struct pkg *);
-typedef char		 *pkg_get_origin_callback(struct pkg *);
+typedef const char	 *pkg_get_version_callback(struct pkg *);
+typedef const char	 *pkg_get_origin_callback(struct pkg *);
 int			  pkg_add_callbacks_data(struct pkg *,
 				pkg_get_version_callback *,
 				pkg_get_origin_callback *);

Modified: trunk/tools/pkg_info/show.c
===================================================================
--- trunk/tools/pkg_info/show.c	2006-02-03 20:50:00 UTC (rev 63)
+++ trunk/tools/pkg_info/show.c	2006-02-03 20:54:26 UTC (rev 64)
@@ -163,7 +163,7 @@
 static void
 show_fmtrev(struct pkg* pkg, const char *title, int quiet)
 {
-	char *version;
+	const char *version;
 	if (!quiet)
 		printf("%s", title);
 



From zxombie at berlios.de  Fri Feb  3 22:02:56 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Fri, 3 Feb 2006 22:02:56 +0100
Subject: [Libpkg-svn] r65 - trunk/src
Message-ID: <200602032102.k13L2uYS002691@sheep.berlios.de>

Author: zxombie
Date: 2006-02-03 22:02:36 +0100 (Fri, 03 Feb 2006)
New Revision: 65

Modified:
   trunk/src/pkg.h
Log:
Catch up with using const char * in pkg_get_name, pkg_get_version and pkg_get_version


Modified: trunk/src/pkg.h
===================================================================
--- trunk/src/pkg.h	2006-02-03 20:54:26 UTC (rev 64)
+++ trunk/src/pkg.h	2006-02-03 21:02:36 UTC (rev 65)
@@ -61,10 +61,10 @@
 struct pkg_file		**pkg_get_control_files(struct pkg *);
 struct pkg_file		 *pkg_get_control_file(struct pkg *, const char *);
 struct pkg		**pkg_get_dependencies(struct pkg *);
-char			 *pkg_get_name(struct pkg *);
+const const char	 *pkg_get_name(struct pkg *);
 struct pkg_file		 *pkg_get_next_file(struct pkg *);
-char			 *pkg_get_origin(struct pkg *);
-char			 *pkg_get_version(struct pkg *);
+const const char	 *pkg_get_origin(struct pkg *);
+const const char	 *pkg_get_version(struct pkg *);
 int			  pkg_add_dependency(struct pkg *, struct pkg *);
 int			  pkg_add_file(struct pkg *, struct pkg_file *);
 int			  pkg_list_free(struct pkg **);



From zxombie at berlios.de  Fri Feb  3 22:23:08 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Fri, 3 Feb 2006 22:23:08 +0100
Subject: [Libpkg-svn] r66 - trunk
Message-ID: <200602032123.k13LN8a3025148@sheep.berlios.de>

Author: zxombie
Date: 2006-02-03 22:23:07 +0100 (Fri, 03 Feb 2006)
New Revision: 66

Modified:
   trunk/README
Log:
Update README on building on Linux


Modified: trunk/README
===================================================================
--- trunk/README	2006-02-03 21:02:36 UTC (rev 65)
+++ trunk/README	2006-02-03 21:23:07 UTC (rev 66)
@@ -3,8 +3,10 @@
 It is initialy designed for FreeBSD but could be extended for any system.
 
 libpkg has been developed and tested on FreeBSD.
-To build libpkg type "make" in this directory. It will build the library and a demo program. The depo program will install a given package to ./fakeroot/
+To build libpkg type "make" in this directory.
 
+libpkg will not currently build on Linux because it used libfetch from the FreeBSD cvs tree to download packages. There is currently no support for formats other then FreeBSD packages version 1.1.
+
 Pros:
     * It appears to be faster than using pkg_add because it extracts the files directly to the correct location rather than to a tempory location then copy to the correct location.
     * It will be able to read and write to multiple package formats.



From zxombie at berlios.de  Mon Feb  6 08:50:53 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Mon, 6 Feb 2006 08:50:53 +0100
Subject: [Libpkg-svn] r67 - in trunk: src tools/pkg_info
Message-ID: <200602060750.k167orXQ001908@sheep.berlios.de>

Author: zxombie
Date: 2006-02-06 08:50:51 +0100 (Mon, 06 Feb 2006)
New Revision: 67

Modified:
   trunk/src/pkg_db.c
   trunk/src/pkg_db.h
   trunk/src/pkg_db_freebsd.c
   trunk/src/pkg_db_private.h
   trunk/tools/pkg_info/show.c
Log:
Change pkg_db_is_installed to take a pkg object rather than a package name


Modified: trunk/src/pkg_db.c
===================================================================
--- trunk/src/pkg_db.c	2006-02-03 21:23:07 UTC (rev 66)
+++ trunk/src/pkg_db.c	2006-02-06 07:50:51 UTC (rev 67)
@@ -115,7 +115,7 @@
  * Check to se if a package is installed
  */
 int
-pkg_db_is_installed(struct pkg_db *db, const char *package)
+pkg_db_is_installed(struct pkg_db *db, struct pkg *pkg)
 {
 	if (!db) {
 		return -1;
@@ -125,7 +125,7 @@
 		return -1;
 	}
 
-	return db->pkg_is_installed(db, package);
+	return db->pkg_is_installed(db, pkg);
 }
 
 /*

Modified: trunk/src/pkg_db.h
===================================================================
--- trunk/src/pkg_db.h	2006-02-03 21:23:07 UTC (rev 66)
+++ trunk/src/pkg_db.h	2006-02-06 07:50:51 UTC (rev 67)
@@ -44,7 +44,7 @@
 
 struct pkg_db	 *pkg_db_open_freebsd(const char *);
 int		  pkg_db_install_pkg(struct pkg_db *, struct pkg *);
-int		  pkg_db_is_installed(struct pkg_db *, const char *);
+int		  pkg_db_is_installed(struct pkg_db *, struct pkg *);
 struct pkg	**pkg_db_get_installed(struct pkg_db *);
 struct pkg	**pkg_db_get_installed_match(struct pkg_db *, pkg_db_match *,
 			void *);

Modified: trunk/src/pkg_db_freebsd.c
===================================================================
--- trunk/src/pkg_db_freebsd.c	2006-02-03 21:23:07 UTC (rev 66)
+++ trunk/src/pkg_db_freebsd.c	2006-02-06 07:50:51 UTC (rev 67)
@@ -63,7 +63,7 @@
 };
 
 static int		  freebsd_install_pkg(struct pkg_db *, struct pkg *);
-static int		  freebsd_is_installed(struct pkg_db *, const char *);
+static int		  freebsd_is_installed(struct pkg_db *, struct pkg *);
 static struct pkg	**freebsd_get_installed_match(struct pkg_db *,
 				pkg_db_match *, void *);
 static struct pkg	 *freebsd_get_package(struct pkg_db *, const char *);	
@@ -283,15 +283,15 @@
  *        -1 otherwise
  */
 static int
-freebsd_is_installed(struct pkg_db *db, const char *package)
+freebsd_is_installed(struct pkg_db *db, struct pkg *pkg)
 {
 	struct stat sb;
 	char *dir;
 
 	assert(db != NULL);
-	assert(package != NULL);
+	assert(pkg != NULL);
 
-	asprintf(&dir, "%s" DB_LOCATION "/%s", db->db_base, package);
+	asprintf(&dir, "%s" DB_LOCATION "/%s", db->db_base, pkg_get_name(pkg));
 	if (!dir) {
 		return -1;
 	}

Modified: trunk/src/pkg_db_private.h
===================================================================
--- trunk/src/pkg_db_private.h	2006-02-03 21:23:07 UTC (rev 66)
+++ trunk/src/pkg_db_private.h	2006-02-06 07:50:51 UTC (rev 67)
@@ -31,7 +31,7 @@
 #define __LIBPKG_PKG_DB_PRIVATE_H__
 
 typedef int	 pkg_db_install_pkg_callback(struct pkg_db *, struct pkg *);
-typedef int 	 pkg_db_is_installed_callback(struct pkg_db *, const char *);
+typedef int 	 pkg_db_is_installed_callback(struct pkg_db *, struct pkg *);
 typedef struct pkg	 *pkg_db_get_package_callback(struct pkg_db *,
 				const char *);
 typedef struct pkg	**pkg_db_get_installed_match_callback(struct pkg_db *,

Modified: trunk/tools/pkg_info/show.c
===================================================================
--- trunk/tools/pkg_info/show.c	2006-02-03 21:23:07 UTC (rev 66)
+++ trunk/tools/pkg_info/show.c	2006-02-06 07:50:51 UTC (rev 67)
@@ -114,12 +114,12 @@
 	//    show_files("Files:\n", &plist);
 	}
 	if ((flags & SHOW_SIZE) &&
-	    pkg_db_is_installed(db, pkg_get_name(pkg)) == 0) {
+	    pkg_db_is_installed(db, pkg) == 0) {
 		show_size(pkg, "Package Size:\n", quiet);
 	//    show_size("Package Size:\n", &plist);
 	}
 	if ((flags & SHOW_CKSUM) &&
-	    pkg_db_is_installed(db, pkg_get_name(pkg)) == 0) {
+	    pkg_db_is_installed(db, pkg) == 0) {
 		show_cksum(pkg, "Mismatched Checksums:\n", quiet);
 	//    show_cksum("Mismatched Checksums:\n", &plist);
 	}



From zxombie at berlios.de  Mon Feb  6 22:55:46 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Mon, 6 Feb 2006 22:55:46 +0100
Subject: [Libpkg-svn] r68 - trunk/src
Message-ID: <200602062155.k16LtkUL007339@sheep.berlios.de>

Author: zxombie
Date: 2006-02-06 22:55:44 +0100 (Mon, 06 Feb 2006)
New Revision: 68

Modified:
   trunk/src/pkg_db.c
   trunk/src/pkg_db.h
   trunk/src/pkg_db_freebsd.c
   trunk/src/pkg_freebsd.c
Log:
Add pkg_match_by_origin to match all packages with a given origin
Update freebsd_is_installed to use pkg_match_by_origin to find if the package is installed


Modified: trunk/src/pkg_db.c
===================================================================
--- trunk/src/pkg_db.c	2006-02-06 07:50:51 UTC (rev 67)
+++ trunk/src/pkg_db.c	2006-02-06 21:55:44 UTC (rev 68)
@@ -197,3 +197,12 @@
 {
 	return 0;
 }
+
+/*
+ * Matches all packages by origin. The origin is a string pointed to by data
+ */
+int
+pkg_match_by_origin(struct pkg *pkg, void *data)
+{
+	return strcmp(pkg_get_origin(pkg), (const char *)data);
+}

Modified: trunk/src/pkg_db.h
===================================================================
--- trunk/src/pkg_db.h	2006-02-06 07:50:51 UTC (rev 67)
+++ trunk/src/pkg_db.h	2006-02-06 21:55:44 UTC (rev 68)
@@ -52,5 +52,6 @@
 int		  pkg_db_free(struct pkg_db *);
 
 int		  pkg_match_all(struct pkg *, void *);
+int		  pkg_match_by_origin(struct pkg *, void *);
 
 #endif /* __LIBPKG_PKG_DB_H__ */

Modified: trunk/src/pkg_db_freebsd.c
===================================================================
--- trunk/src/pkg_db_freebsd.c	2006-02-06 07:50:51 UTC (rev 67)
+++ trunk/src/pkg_db_freebsd.c	2006-02-06 21:55:44 UTC (rev 68)
@@ -287,6 +287,8 @@
 {
 	struct stat sb;
 	char *dir;
+	struct pkg **pkgs;
+	int is_installed;
 
 	assert(db != NULL);
 	assert(pkg != NULL);
@@ -296,23 +298,26 @@
 		return -1;
 	}
 
+	is_installed = -1;
+
 	/* Does the package repo directory exist */
-	errno = 0;
-	if (stat(dir, &sb)) {
-		free(dir);
-		return -1;
+	if (stat(dir, &sb) == 0 && S_ISDIR(sb.st_mode) != 0) {
+		/* The passed package is installed */
+		is_installed = 0;
 	}
+	free(dir);
+	if (is_installed == 0)
+		return 0;
 
-	if (!S_ISDIR(sb.st_mode)) {
-		free(dir);
-		return -1;
+	/* Does the package have an origin and if so is that origin installed */
+	if (pkg_get_origin(pkg) != NULL) {
+		pkgs = freebsd_get_installed_match(db, pkg_match_by_origin,
+		    (void *)pkg_get_origin(pkg));
+		if (pkgs[0] != NULL)
+			is_installed = 0;
+		pkg_list_free(pkgs);
 	}
-
-	free(dir);
-
-	/* XXX Check the correct files are there */
-
-	return 0;
+	return is_installed;
 }
 
 /*

Modified: trunk/src/pkg_freebsd.c
===================================================================
--- trunk/src/pkg_freebsd.c	2006-02-06 07:50:51 UTC (rev 67)
+++ trunk/src/pkg_freebsd.c	2006-02-06 21:55:44 UTC (rev 68)
@@ -100,6 +100,7 @@
 	struct pkg *pkg;
 	struct freebsd_package *f_pkg;
 	char *pkg_name;
+	unsigned int line;
 
 	if (fd == NULL)
 		return NULL;
@@ -116,8 +117,22 @@
 	if (pkg == NULL)
 		return NULL;
 	pkg_add_callbacks_install(pkg, freebsd_get_next_file);
+	pkg_add_callbacks_data(pkg, freebsd_get_version, freebsd_get_origin);
 
 	pkg->data = f_pkg;
+	
+	assert(f_pkg->contents != NULL);
+	for (line = 0; line < f_pkg->contents->line_count; line++) {
+		if (f_pkg->contents->lines[line].line_type == PKG_LINE_COMMENT)
+		    {
+			if (strncmp("ORIGIN:",
+			    f_pkg->contents->lines[line].data, 7) == 0) {
+				f_pkg->origin = strdup(
+				    f_pkg->contents->lines[line].data + 7);
+				break;
+			}
+		}
+	}
 
 	return pkg;
 }



From zxombie at berlios.de  Tue Feb  7 23:04:17 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Tue, 7 Feb 2006 23:04:17 +0100
Subject: [Libpkg-svn] r69 - trunk/src
Message-ID: <200602072204.k17M4H2j027599@sheep.berlios.de>

Author: zxombie
Date: 2006-02-07 23:04:16 +0100 (Tue, 07 Feb 2006)
New Revision: 69

Modified:
   trunk/src/Makefile
   trunk/src/pkg.h
   trunk/src/pkg_db_freebsd.c
   trunk/src/pkg_file.c
   trunk/src/pkg_freebsd.c
   trunk/src/pkg_repo.h
Log:
Add support to pkg_file for symlinks
Create symlinks when the tarball contains them


Modified: trunk/src/Makefile
===================================================================
--- trunk/src/Makefile	2006-02-06 21:55:44 UTC (rev 68)
+++ trunk/src/Makefile	2006-02-07 22:04:16 UTC (rev 69)
@@ -15,7 +15,7 @@
 SRCS+=	pkg_db.c pkg_db_freebsd.c
 
 # Package Repository
-SRCS+=	pkg_repo.c pkg_repo_files.c pkg_repo_ftp.c
+SRCS+=	pkg_repo.c pkg_repo_files.c pkg_repo_ftp.c pkg_repo_local_freebsd.c
 
 # Misc functions
 SRCS+=	pkg_util.c

Modified: trunk/src/pkg.h
===================================================================
--- trunk/src/pkg.h	2006-02-06 21:55:44 UTC (rev 68)
+++ trunk/src/pkg.h	2006-02-07 22:04:16 UTC (rev 69)
@@ -41,6 +41,7 @@
 struct pkg_file;
 
 struct pkg_file	*pkg_file_new(const char *);
+struct pkg_file	*pkg_file_new_symlink(const char *, char *,const struct stat *);
 struct pkg_file	*pkg_file_new_from_buffer(const char *, uint64_t, char *,
 			const struct stat *);
 int		 pkg_file_write(struct pkg_file *);

Modified: trunk/src/pkg_db_freebsd.c
===================================================================
--- trunk/src/pkg_db_freebsd.c	2006-02-06 21:55:44 UTC (rev 68)
+++ trunk/src/pkg_db_freebsd.c	2006-02-07 22:04:16 UTC (rev 69)
@@ -222,7 +222,8 @@
 			contents_sum = strchr(contents->lines[line+1].data,
 			    ':');
 			contents_sum++;
-			if (pkg_checksum_md5(file, contents_sum) != 0) {
+			if (S_ISREG(file->stat->st_mode) &&
+			    pkg_checksum_md5(file, contents_sum) != 0) {
 				chdir(cwd);
 				free(cwd);
 				free(directory);

Modified: trunk/src/pkg_file.c
===================================================================
--- trunk/src/pkg_file.c	2006-02-06 21:55:44 UTC (rev 68)
+++ trunk/src/pkg_file.c	2006-02-07 22:04:16 UTC (rev 69)
@@ -67,6 +67,16 @@
 	return file;
 }
 
+struct pkg_file *
+pkg_file_new_symlink(const char *filename, char *link,
+		const struct stat *sb)
+{
+	if (!filename || !link || !sb)
+		return NULL;
+
+	return pkg_file_new_from_buffer(filename, strlen(link), link, sb);
+}
+
 /*
  * Creates a new pkg_file from a buffer
  */
@@ -148,51 +158,49 @@
 		return -1;
 	}
 
-	if (file->stat) {
-		/* Check the file to be written is regular */
-		if (!S_ISREG(file->stat->st_mode)) {
+	if (!file->stat || S_ISREG(file->stat->st_mode)) {
+		/* Open the file to append to it */
+		fd = fopen(file->filename, "a");
+		if (fd == NULL) {
+			char *dir_name;
+
+			/*
+			 * The open failed, try running mkdir -p
+			 * on the dir and opening again
+			 */
+			dir_name = dirname(file->filename);
+			pkg_dir_build(dir_name);
+			fd = fopen(file->filename, "a");
+			if (fd == NULL) {
+				return -1;
+			}
+		}
+		/* Check the file we just created is a regular file */
+		fstat(fileno(fd), &sb);
+		if (!S_ISREG(sb.st_mode)) {
+			fclose(fd);
 			return -1;
+		} else if (sb.st_size > 0) {
+			/* And the file is empty */
+			fclose(fd);
+			return -1;
 		}
-	}
 
-	/* Open the file to append to it */
-	fd = fopen(file->filename, "a");
-	if (fd == NULL) {
-		char *dir_name;
+		/* Write the file to disk */
+		fwrite(file->contents, file->len, 1, fd);
 
-		/*
-		 * The open failed, try running mkdir -p
-		 * on the dir and opening again
-		 */
-		dir_name = dirname(file->filename);
-		pkg_dir_build(dir_name);
-		fd = fopen(file->filename, "a");
-		if (fd == NULL) {
-			return -1;
+		if (file->stat) {
+			/* Set the correct permission for the file */
+			fchmod(fileno(fd), file->stat->st_mode);
 		}
-	}
-	/* Check the file we just created is a regular file */
-	fstat(fileno(fd), &sb);
-	if (!S_ISREG(sb.st_mode)) {
+
 		fclose(fd);
-		return -1;
-	} else if (sb.st_size > 0) {
-		/* And the file is empty */
-		fclose(fd);
-		return -1;
-	}
 
-	/* Write the file to disk */
-	fwrite(file->contents, file->len, 1, fd);
-
-	if (file->stat) {
-		/* Set the correct permission for the file */
-		fchmod(fileno(fd), file->stat->st_mode);
+		return 0;
+	} else if (S_ISLNK(file->stat->st_mode)) {
+		return symlink(file->contents, file->filename);
 	}
-
-	fclose(fd);
-
-	return 0;
+	return -1;
 }
 
 /*

Modified: trunk/src/pkg_freebsd.c
===================================================================
--- trunk/src/pkg_freebsd.c	2006-02-06 21:55:44 UTC (rev 68)
+++ trunk/src/pkg_freebsd.c	2006-02-07 22:04:16 UTC (rev 69)
@@ -33,6 +33,7 @@
 #include <archive_entry.h>
 #include <assert.h>
 #include <dirent.h>
+#include <err.h>
 #include <libgen.h>
 #include <stdlib.h>
 #include <string.h>
@@ -631,21 +632,32 @@
 		return NULL;
 	}
 
-	/* Allocate enough space for the file and copy it to the string */
-	length = archive_entry_size(entry);
-	str = malloc(length+1);
-	if (!str) {
-		return NULL;
-	}
-	archive_read_data_into_buffer(a, str, length);
-	str[length] = '\0';
-
 	/* Get the needed struct stat from the archive */
 	sb = archive_entry_stat(entry);
 
-	/* Create the pkg_file and return it */
-	return pkg_file_new_from_buffer(archive_entry_pathname(entry),
-		length, str, sb);
+	if (S_ISREG(sb->st_mode)) {
+		/* Allocate enough space for the file and copy it to the string */
+		length = archive_entry_size(entry);
+		str = malloc(length+1);
+		if (!str) {
+			return NULL;
+		}
+		archive_read_data_into_buffer(a, str, length);
+		str[length] = '\0';
+
+		/* Create the pkg_file and return it */
+		return pkg_file_new_from_buffer(archive_entry_pathname(entry),
+			length, str, sb);
+	} else if (S_ISLNK(sb->st_mode)) {
+		str = strdup(archive_entry_symlink(entry));
+		if (!str)
+			return NULL;
+
+		return pkg_file_new_symlink(archive_entry_pathname(entry),
+		    str, sb);
+	}
+	errx(1, "File is not regular or symbolic link");
+	return NULL;
 }
 
 /*

Modified: trunk/src/pkg_repo.h
===================================================================
--- trunk/src/pkg_repo.h	2006-02-06 21:55:44 UTC (rev 68)
+++ trunk/src/pkg_repo.h	2006-02-07 22:04:16 UTC (rev 69)
@@ -38,6 +38,7 @@
 
 struct pkg_repo	*pkg_repo_new_files(void);
 struct pkg_repo	*pkg_repo_new_ftp(const char *, const char *);
+struct pkg_repo	*pkg_repo_new_local_freebsd(void);
 struct pkg	*pkg_repo_get_pkg(struct pkg_repo *, const char *);
 int		 pkg_repo_free(struct pkg_repo *);
 



From zxombie at berlios.de  Tue Feb  7 23:23:56 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Tue, 7 Feb 2006 23:23:56 +0100
Subject: [Libpkg-svn] r70 - trunk/src
Message-ID: <200602072223.k17MNuaA032222@sheep.berlios.de>

Author: zxombie
Date: 2006-02-07 23:23:56 +0100 (Tue, 07 Feb 2006)
New Revision: 70

Added:
   trunk/src/pkg_repo_local_freebsd.c
Log:
Add pkg_repo_local_freebsd to search for packages in . and /usr/ports/packages/All

A few changes in rev. 69 should have been in this commit


Added: trunk/src/pkg_repo_local_freebsd.c
===================================================================
--- trunk/src/pkg_repo_local_freebsd.c	2006-02-07 22:04:16 UTC (rev 69)
+++ trunk/src/pkg_repo_local_freebsd.c	2006-02-07 22:23:56 UTC (rev 70)
@@ -0,0 +1,92 @@
+/*
+ * Copyright (C) 2006, Andrew Turner, All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer
+ *    in this position and unchanged.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. The name(s) of the author(s) may not be used to endorse or promote
+ *    products derived from this software without specific prior written
+ *    permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+ * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
+#include <sys/param.h>
+
+#include <assert.h>
+#include <stdio.h>
+#include <string.h>
+
+#include "pkg.h"
+#include "pkg_repo.h"
+#include "pkg_private.h"
+#include "pkg_repo_private.h"
+
+static struct pkg *file_get_pkg(struct pkg_repo *, const char *);
+
+/**
+ * The contructor.
+ * Creates a package repo where the packages are stored on a local filesystem.
+ * If the package name contains a '/' it will assume it is a path and attempt
+ * to open the package from there.
+ * Otherwise it will search in '.' then /usr/ports/distfiles.
+ * @return 
+ */
+struct pkg_repo *
+pkg_repo_new_local_freebsd()
+{
+	return pkg_repo_new(file_get_pkg, NULL);
+}
+
+static struct pkg *
+file_get_pkg(struct pkg_repo *repo, const char *pkg_name)
+{
+	char dir[MAXPATHLEN + 1];
+	struct pkg *pkg;
+	FILE *fd;
+	assert(repo != NULL);
+	assert(pkg_name != NULL);
+
+	/* XXX Check the file is a package file after every attempt to open it */
+	snprintf(dir, MAXPATHLEN + 1,"%s.tbz", pkg_name);
+	fd = fopen(dir, "r");
+	if (!fd) {
+		snprintf(dir, MAXPATHLEN + 1,
+		    "/usr/ports/packages/All/%s.tbz", pkg_name);
+		fd = fopen(dir, "r");
+	}
+	if (!fd) {
+		fd = fopen(pkg_name, "r");
+	}
+	if (!fd) {
+		snprintf(dir, MAXPATHLEN + 1,
+		    "/usr/ports/packages/All/%s", pkg_name);
+		fd = fopen(dir, "r");
+	}
+	if (!fd)
+		return NULL;
+
+	pkg = pkg_new_freebsd_from_file(fd);
+	if (!pkg) {
+		fclose(fd);
+		return NULL;
+	}
+
+	return pkg;
+}



From zxombie at berlios.de  Mon Feb 20 01:46:24 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Mon, 20 Feb 2006 01:46:24 +0100
Subject: [Libpkg-svn] r71 - trunk/tools/pkg_info
Message-ID: <200602200046.k1K0kOvC007794@sheep.berlios.de>

Author: zxombie
Date: 2006-02-20 01:45:19 +0100 (Mon, 20 Feb 2006)
New Revision: 71

Modified:
   trunk/tools/pkg_info/Makefile
Log:
Silence a warning about NOMAN being depricated


Modified: trunk/tools/pkg_info/Makefile
===================================================================
--- trunk/tools/pkg_info/Makefile	2006-02-07 22:23:56 UTC (rev 70)
+++ trunk/tools/pkg_info/Makefile	2006-02-20 00:45:19 UTC (rev 71)
@@ -11,6 +11,7 @@
 .endif
 LDADD	+= -lmd -larchive -lbz2 -lz
 NOMAN	 = 1
+NO_MAN	 = 1
 
 WARNS	?= 6
 



From zxombie at berlios.de  Wed Feb 22 04:31:47 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Wed, 22 Feb 2006 04:31:47 +0100
Subject: [Libpkg-svn] r72 - trunk/src
Message-ID: <200602220331.k1M3Vlc4001191@sheep.berlios.de>

Author: zxombie
Date: 2006-02-22 04:31:31 +0100 (Wed, 22 Feb 2006)
New Revision: 72

Modified:
   trunk/src/Makefile
   trunk/src/pkg.c
   trunk/src/pkg_repo_ftp.c
Log:
Check ftp_get_fd returns a valid pointer
Make pkg_compare WARNS=6 complant
Make src/Makefile easyer to read


Modified: trunk/src/Makefile
===================================================================
--- trunk/src/Makefile	2006-02-20 00:45:19 UTC (rev 71)
+++ trunk/src/Makefile	2006-02-22 03:31:31 UTC (rev 72)
@@ -1,31 +1,32 @@
-LIB=	pkg
+LIB		 = pkg
 
-SRCS=	archive_read_open_stream.c
+SRCS		 = archive_read_open_stream.c
 
 # Package handling
-SRCS+=	pkg.c pkg_freebsd.c
+SRCS		+= pkg.c pkg_freebsd.c
 
 # Handle FreeBSD +CONTENTS files
-SRCS+=	pkg_freebsd_contents.c
+SRCS		+= pkg_freebsd_contents.c
 
 # Package files
-SRCS+=	pkg_file.c
+SRCS		+= pkg_file.c
 
 # Package Database
-SRCS+=	pkg_db.c pkg_db_freebsd.c
+SRCS		+= pkg_db.c pkg_db_freebsd.c
 
 # Package Repository
-SRCS+=	pkg_repo.c pkg_repo_files.c pkg_repo_ftp.c pkg_repo_local_freebsd.c
+SRCS		+= pkg_repo.c pkg_repo_files.c pkg_repo_ftp.c \
+			pkg_repo_local_freebsd.c
 
 # Misc functions
-SRCS+=	pkg_util.c
+SRCS		+= pkg_util.c
 
-INC=	pkg.h
+INC		 = pkg.h
 
-MAN=	libpkg.3 pkg.3 pkg_repo.3 pkg_db.3
+MAN		 = libpkg.3 pkg.3 pkg_repo.3 pkg_db.3
 
-CFLAGS+=-O0
-DEBUG_FLAGS=-ggdb
-WARNS?=3
+CFLAGS		+= -O0
+DEBUG_FLAGS	= -ggdb
+WARNS		?= 6
 
 .include <bsd.lib.mk>

Modified: trunk/src/pkg.c
===================================================================
--- trunk/src/pkg.c	2006-02-20 00:45:19 UTC (rev 71)
+++ trunk/src/pkg.c	2006-02-22 03:31:31 UTC (rev 72)
@@ -144,8 +144,8 @@
 pkg_compare(const void *pkg_a, const void *pkg_b)
 {
 	/* XXX Makes WARNS <= 3 */
-	return strcmp((*(const struct pkg **)pkg_a)->pkg_name,
-	    (*(const struct pkg **)pkg_b)->pkg_name);
+	return strcmp((*(struct pkg * const *)pkg_a)->pkg_name,
+	    (*(struct pkg * const *)pkg_b)->pkg_name);
 }
 
 /*

Modified: trunk/src/pkg_repo_ftp.c
===================================================================
--- trunk/src/pkg_repo_ftp.c	2006-02-20 00:45:19 UTC (rev 71)
+++ trunk/src/pkg_repo_ftp.c	2006-02-22 03:31:31 UTC (rev 72)
@@ -135,6 +135,8 @@
 	assert(f_repo != NULL);
 
 	fd = ftp_get_fd(pkg_name, f_repo);
+	if (fd == NULL)
+		return NULL;
 	
 	pkg = pkg_new_freebsd_from_file(fd);
 	if (!pkg) {



From zxombie at berlios.de  Thu Feb 23 10:50:53 2006
From: zxombie at berlios.de (zxombie at BerliOS)
Date: Thu, 23 Feb 2006 10:50:53 +0100
Subject: [Libpkg-svn] r73 - in trunk: src tools/pkg_info
Message-ID: <200602230950.k1N9orQg031440@sheep.berlios.de>

Author: zxombie
Date: 2006-02-23 10:50:52 +0100 (Thu, 23 Feb 2006)
New Revision: 73

Modified:
   trunk/src/pkg_db.c
   trunk/src/pkg_db.h
   trunk/src/pkg_db_freebsd.c
   trunk/src/pkg_db_private.h
   trunk/src/pkg_file.c
   trunk/tools/pkg_info/match.c
Log:
Make WARNS=6 compliant by making the data taken by freebsd_get_installed_match of type `const void *'
Rename the link argument in pkg_file_new_symlink to lnk to not conflict with link(2)


Modified: trunk/src/pkg_db.c
===================================================================
--- trunk/src/pkg_db.c	2006-02-22 03:31:31 UTC (rev 72)
+++ trunk/src/pkg_db.c	2006-02-23 09:50:52 UTC (rev 73)
@@ -141,7 +141,7 @@
  * Get a NULL terminated array of installed packages that match accepts
  */
 struct pkg **
-pkg_db_get_installed_match(struct pkg_db *db, pkg_db_match *match, void *data)
+pkg_db_get_installed_match(struct pkg_db *db, pkg_db_match *match, const void *data)
 {
 	if (!db)
 		return NULL;
@@ -193,7 +193,7 @@
  * This is here because it is used with pkg_db_get_installed_match
  */
 int
-pkg_match_all(struct pkg *pkg __unused, void *data __unused)
+pkg_match_all(struct pkg *pkg __unused, const void *data __unused)
 {
 	return 0;
 }
@@ -202,7 +202,7 @@
  * Matches all packages by origin. The origin is a string pointed to by data
  */
 int
-pkg_match_by_origin(struct pkg *pkg, void *data)
+pkg_match_by_origin(struct pkg *pkg, const void *data)
 {
 	return strcmp(pkg_get_origin(pkg), (const char *)data);
 }

Modified: trunk/src/pkg_db.h
===================================================================
--- trunk/src/pkg_db.h	2006-02-22 03:31:31 UTC (rev 72)
+++ trunk/src/pkg_db.h	2006-02-23 09:50:52 UTC (rev 73)
@@ -40,18 +40,18 @@
  * It will take a package and some user specified data in.
  * Returns 0 if the package matches or -1 otherwise.
  */
-typedef		  int pkg_db_match(struct pkg *, void *);
+typedef		  int pkg_db_match(struct pkg *, const void *);
 
 struct pkg_db	 *pkg_db_open_freebsd(const char *);
 int		  pkg_db_install_pkg(struct pkg_db *, struct pkg *);
 int		  pkg_db_is_installed(struct pkg_db *, struct pkg *);
 struct pkg	**pkg_db_get_installed(struct pkg_db *);
 struct pkg	**pkg_db_get_installed_match(struct pkg_db *, pkg_db_match *,
-			void *);
+			const void *);
 struct pkg	 *pkg_db_get_package(struct pkg_db *, const char *);
 int		  pkg_db_free(struct pkg_db *);
 
-int		  pkg_match_all(struct pkg *, void *);
-int		  pkg_match_by_origin(struct pkg *, void *);
+int		  pkg_match_all(struct pkg *, const void *);
+int		  pkg_match_by_origin(struct pkg *, const void *);
 
 #endif /* __LIBPKG_PKG_DB_H__ */

Modified: trunk/src/pkg_db_freebsd.c
===================================================================
--- trunk/src/pkg_db_freebsd.c	2006-02-22 03:31:31 UTC (rev 72)
+++ trunk/src/pkg_db_freebsd.c	2006-02-23 09:50:52 UTC (rev 73)
@@ -65,7 +65,7 @@
 static int		  freebsd_install_pkg(struct pkg_db *, struct pkg *);
 static int		  freebsd_is_installed(struct pkg_db *, struct pkg *);
 static struct pkg	**freebsd_get_installed_match(struct pkg_db *,
-				pkg_db_match *, void *);
+				pkg_db_match *, const void *);
 static struct pkg	 *freebsd_get_package(struct pkg_db *, const char *);	
 
 /* Internal */
@@ -313,7 +313,7 @@
 	/* Does the package have an origin and if so is that origin installed */
 	if (pkg_get_origin(pkg) != NULL) {
 		pkgs = freebsd_get_installed_match(db, pkg_match_by_origin,
-		    (void *)pkg_get_origin(pkg));
+		    (const void *)pkg_get_origin(pkg));
 		if (pkgs[0] != NULL)
 			is_installed = 0;
 		pkg_list_free(pkgs);
@@ -325,7 +325,7 @@
  * Gets all installed packages
  */
 static struct pkg **
-freebsd_get_installed_match(struct pkg_db *db, pkg_db_match *match, void *data)
+freebsd_get_installed_match(struct pkg_db *db, pkg_db_match *match, const void *data)
 {
 	DIR *d;
 	struct dirent *de;

Modified: trunk/src/pkg_db_private.h
===================================================================
--- trunk/src/pkg_db_private.h	2006-02-22 03:31:31 UTC (rev 72)
+++ trunk/src/pkg_db_private.h	2006-02-23 09:50:52 UTC (rev 73)
@@ -35,7 +35,7 @@
 typedef struct pkg	 *pkg_db_get_package_callback(struct pkg_db *,
 				const char *);
 typedef struct pkg	**pkg_db_get_installed_match_callback(struct pkg_db *,
-				pkg_db_match *, void *);
+				pkg_db_match *, const void *);
 
 
 struct pkg_db	*pkg_db_open(const char *, pkg_db_install_pkg_callback *,

Modified: trunk/src/pkg_file.c
===================================================================
--- trunk/src/pkg_file.c	2006-02-22 03:31:31 UTC (rev 72)
+++ trunk/src/pkg_file.c	2006-02-23 09:50:52 UTC (rev 73)
@@ -68,13 +68,13 @@
 }
 
 struct pkg_file *
-pkg_file_new_symlink(const char *filename, char *link,
+pkg_file_new_symlink(const char *filename, char *lnk,
 		const struct stat *sb)
 {
-	if (!filename || !link || !sb)
+	if (!filename || !lnk || !sb)
 		return NULL;
 
-	return pkg_file_new_from_buffer(filename, strlen(link), link, sb);
+	return pkg_file_new_from_buffer(filename, strlen(lnk), lnk, sb);
 }
 
 /*

Modified: trunk/tools/pkg_info/match.c
===================================================================
--- trunk/tools/pkg_info/match.c	2006-02-22 03:31:31 UTC (rev 72)
+++ trunk/tools/pkg_info/match.c	2006-02-23 09:50:52 UTC (rev 73)
@@ -31,13 +31,13 @@
 	regex_t *rex;
 };
 
-static int _pkg_match_regex(struct pkg *, void *);
+static int _pkg_match_regex(struct pkg *, const void *);
 
 static int
-_pkg_match_regex(struct pkg *pkg, void *data)
+_pkg_match_regex(struct pkg *pkg, const void *data)
 {
 	unsigned int i;
-	struct regex_or *rex;
+	const struct regex_or *rex;
 	
 	assert(pkg != NULL);
 	assert(data != NULL);



